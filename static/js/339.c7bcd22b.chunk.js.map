{"version":3,"file":"static/js/339.c7bcd22b.chunk.js","mappings":"uQACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mBAA3E,EAAqG,mB,SCuDrG,EAlDa,WACT,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,6FACnBN,GAAW,GADQ,mBAGQO,EAAAA,EAAAA,IAAiBJ,GAHzB,gBAGPK,EAHO,EAGPA,KACRV,EAAUU,GAJK,gDAMfN,EAAS,KAAMO,SANA,yBAQfT,GAAW,GARI,4EAAH,qDAYpBM,GACH,GAAE,CAACH,KAGA,2BACKJ,IAAW,SAACW,EAAA,EAAD,IACXT,IAAS,uBAAG,0BACb,eAAIU,UAAWC,EAAf,SACKf,EAAOgB,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,WACI,gBACID,UAAWC,EACXG,MAAM,QACNC,IACIF,EAAMG,aACAC,EAAAA,GAAYJ,EAAMG,aADxB,0DAIJE,IAAKL,EAAMM,iBAEf,iBAAKT,UAAWC,EAAhB,WACI,uBAAIE,EAAMO,QACV,yBAAG,cAAYP,EAAMQ,kBAbIR,EAAMS,GAD1B,QAqBhC,C,iNCpDKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDX,EAAY,kCAEZY,EAAmB,mCAAG,sGACVN,EAASO,IAAI,sBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNQ,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMd,GAAN,yFACRC,EAASO,IAAT,gBAAsBR,IADd,uBACvBS,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBzB,EAAgB,mCAAG,WAAMgB,GAAN,yFACPC,EAASO,IAAT,gBAAsBR,EAAtB,aADO,uBACtBS,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBM,EAAiB,mCAAG,WAAMf,GAAN,yFACRC,EAASO,IAAT,gBAAsBR,EAAtB,aADQ,uBACvBS,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/cast/Cast.module.css?3f37","pages/cast/Cast.jsx","serviceApi/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__dG2Qj\",\"item\":\"Cast_item__WsxzI\",\"foto\":\"Cast_foto__1tptV\",\"info\":\"Cast_info__b-g+T\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieActors, IMAGE_URL } from \"serviceApi/api-movies\";\nimport Loader from \"components/loader/Loader\";\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getMovieActors = async () => {\n            setLoading(true);\n            try {\n                const { cast } = await fetchMovieActors(movieId);\n                setActors(cast);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false)\n            }\n        };\n\n        getMovieActors();\n    }, [movieId]);\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {error && <p>Something goes wrong</p>}\n            <ul className={styles.list}>\n                {actors.map(actor => (\n                    <li className={styles.item} key={actor.id}>\n                        <img\n                            className={styles.foto}\n                            width=\"200px\"\n                            src={\n                                actor.profile_path\n                                    ? IMAGE_URL + actor.profile_path\n                                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                            }\n                            alt={actor.original_name}\n                        />\n                        <div className={styles.info}>\n                            <p>{actor.name}</p>\n                            <p>Character: {actor.character}</p>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '9f483b2fd7e828c71a7a1dd0e1411689',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","actors","setActors","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieActors","fetchMovieActors","cast","message","Loader","className","styles","map","actor","width","src","profile_path","IMAGE_URL","alt","original_name","name","character","id","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","data","searchMovies","query","page","include_adult","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}
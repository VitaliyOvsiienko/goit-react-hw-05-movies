{"version":3,"file":"static/js/970.f5d67b5f.chunk.js","mappings":"+LACA,EAA4B,oCAA5B,EAAuE,+B,SCgCvE,EA5ByB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,eAAaC,UAAWC,EAAxB,UACI,SAAC,KAAD,CACID,UAAWC,EACXC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMT,GAHnB,SAKKI,KANAD,EADD,KAavB,C,uJCrBD,EAAwB,oB,SCkCxB,EA7Ba,WACT,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,6FAClBF,GAAW,GADO,mBAGYG,EAAAA,EAAAA,MAHZ,gBAGNC,EAHM,EAGNA,QACRR,EAAUQ,GAJI,gDAMdN,EAAS,KAAMO,SAND,yBAQdL,GAAW,GARG,4EAAH,qDAWnBE,GACH,GAAE,KAEC,4BACKH,IAAW,SAACO,EAAA,EAAD,KACZ,eAAIhB,UAAWC,EAAf,SAA6B,mBAC5BP,IAAU,SAACuB,EAAA,EAAD,CAAkBvB,OAAQA,IACpCa,IAAS,uBAAG,gCAGxB,C,iNC/BKW,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,kCAEZX,EAAmB,mCAAG,sGACVK,EAASO,IAAI,sBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNQ,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMjC,GAAN,yFACRoB,EAASO,IAAT,gBAAsB3B,IADd,uBACvB4B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMlC,GAAN,yFACPoB,EAASO,IAAT,gBAAsB3B,EAAtB,aADO,uBACtB4B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBO,EAAiB,mCAAG,WAAMnC,GAAN,yFACRoB,EAASO,IAAT,gBAAsB3B,EAAtB,aADQ,uBACvB4B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/moviesEditorList/MoviesEditorList.module.css?3b3e","components/moviesEditorList/MoviesEditorList.jsx","webpack://react-homework-template/./src/pages/home/Home.module.css?1311","pages/home/Home.jsx","serviceApi/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movielink\":\"MoviesEditorList_movielink__xaHBx\",\"link\":\"MoviesEditorList_link__gojY1\"};","import { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport styles from './MoviesEditorList.module.css';\n\n\nconst MoviesEditorList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map(({ id, title }) => (\n                <li key={id} className={styles.movielink}>\n                    <Link\n                        className={styles.link}\n                        to={`/movies/${id}`}\n                        state={{ from: location }}\n                    >\n                        {title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nMoviesEditorList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired\n        })\n    )\n};\n\nexport default MoviesEditorList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__5eO91\"};","import { useState, useEffect } from \"react\";\nimport { fetchTrendingMovies } from \"serviceApi/api-movies\";\nimport MoviesEditorList from \"components/moviesEditorList/MoviesEditorList\";\nimport Loader from \"components/loader/Loader\";\nimport styles from './Home.module.css'\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchTrending = async () => {\n            setLoading(true);\n            try {\n                const { results } = await fetchTrendingMovies();\n                setMovies(results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchTrending();\n    }, []);\n    return (\n        <main>\n            {loading && <Loader />}\n            <h1 className={styles.title}>Tranding today</h1>\n            {movies && <MoviesEditorList movies={movies} />}\n            {error && <p>Houston we have a problem</p>}\n        </main>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '9f483b2fd7e828c71a7a1dd0e1411689',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["movies","location","useLocation","map","id","title","className","styles","to","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchTrending","fetchTrendingMovies","results","message","Loader","MoviesEditorList","instance","axios","baseURL","params","api_key","language","IMAGE_URL","get","data","searchMovies","query","page","include_adult","fetchMovieDetails","fetchMovieActors","fetchMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/691.96a1c5a2.chunk.js","mappings":"uQACA,EAA8B,6BAA9B,EAAyE,6BAAzE,EAAoH,6B,SCkDpH,EA7CgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,6FACpBN,GAAW,GADS,mBAGUO,EAAAA,EAAAA,IAAkBJ,GAH5B,gBAGRK,EAHQ,EAGRA,QACRV,EAAWU,GAJK,gDAMhBN,EAAS,KAAMO,SANC,yBAQhBT,GAAW,GARK,4EAAH,qDAWrBM,GACH,GAAE,CAACH,KAGA,gCACKF,IAAS,uBAAG,yBACZF,IAAW,SAACW,EAAA,EAAD,IACQ,IAAnBb,EAAQc,SACL,0BACI,eAAIC,UAAWC,EAAf,SACKhB,EAAQiB,KAAI,SAAAC,GAAM,OACf,gBAAoBH,UAAWC,EAA/B,WACI,0BAAI,WAASE,EAAOC,WACpB,cAAGJ,UAAWC,EAAd,SAAmCE,EAAOE,YAFrCF,EAAOG,GADD,QASX,IAAnBrB,EAAQc,SACL,yBAAK,+CAIpB,C,iNC/CKQ,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,kCAEZC,EAAmB,mCAAG,sGACVP,EAASQ,IAAI,sBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASQ,IAAI,eAAgB,CAClDL,OAAQ,CACNS,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMf,GAAN,yFACRC,EAASQ,IAAT,gBAAsBT,IADd,uBACvBU,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMhB,GAAN,yFACPC,EAASQ,IAAT,gBAAsBT,EAAtB,aADO,uBACtBU,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBrB,EAAiB,mCAAG,WAAMW,GAAN,yFACRC,EAASQ,IAAT,gBAAsBT,EAAtB,aADQ,uBACvBU,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/reviews/Reviews.module.css?ccfa","pages/reviews/Reviews.jsx","serviceApi/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewslist\":\"Reviews_reviewslist__CHZKx\",\"reviewsitem\":\"Reviews_reviewsitem__Vnlbo\",\"reviewstext\":\"Reviews_reviewstext__4i257\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"serviceApi/api-movies\";\nimport Loader from \"components/loader/Loader\";\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n\n\n    useEffect(() => {\n        const getMovieReviews = async () => {\n            setLoading(true);\n            try {\n                const { results } = await fetchMovieReviews(movieId);\n                setReviews(results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false)\n            }\n        };\n        getMovieReviews();\n    }, [movieId]);\n\n    return (\n        <>\n            {error && <p>Something goes wrong</p>}\n            {loading && <Loader />}\n            {reviews.length !== 0 && (\n                <div>\n                    <ul className={styles.reviewslist}>\n                        {reviews.map(review => (\n                            <li key={review.id} className={styles.reviewsitem}>\n                                <h2>Author: {review.author}</h2>\n                                <p className={styles.reviewstext}>{review.content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            {reviews.length === 0 && (\n                <div>We don't have any reviews for this movie</div>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '9f483b2fd7e828c71a7a1dd0e1411689',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","results","message","Loader","length","className","styles","map","review","author","content","id","instance","axios","baseURL","params","api_key","language","IMAGE_URL","fetchTrendingMovies","get","data","searchMovies","query","page","include_adult","fetchMovieDetails","fetchMovieActors"],"sourceRoot":""}
{"version":3,"file":"static/js/793.952fefe0.chunk.js","mappings":"qSACA,GAAgB,OAAS,6BAA6B,MAAQ,4BAA4B,aAAe,mCAAmC,KAAO,2BAA2B,OAAS,6BAA6B,SAAW,+BAA+B,UAAY,gCAAgC,aAAe,mCAAmC,KAAO,2BAA2B,SAAW,gC,SCiHzY,EAzGqB,WAAO,IAAD,EACvB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAO,UAAAN,EAASO,aAAT,eAAgBD,OAAQ,UAGrCE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,2FACpBZ,GAAW,GADS,mBAGGa,EAAAA,EAAAA,IAAkBN,GAHrB,OAGVO,EAHU,OAIhBhB,EAASgB,GAJO,gDAMhBZ,EAAS,KAAMa,SANC,yBAQhBf,GAAW,GARK,4EAAH,qDAWrBY,GACH,GAAE,CAACL,IAMJ,OACI,gCACKN,IAAS,uBAAG,yBACZF,IAAW,SAACiB,EAAA,EAAD,IACVnB,GAGE,iCACI,oBAAQoB,UAAWC,EAAAA,OAAeC,KAAK,SAASC,QAZ/C,WACbf,EAASI,EACZ,EAUe,WACI,SAAC,cAAD,CACIY,MAAO,CACHC,MAAO,QACPC,KAAM,GACNN,UAAW,qBAJnB,UAOI,0BACI,SAAC,MAAD,SAGR,0BAAM,gBAEV,iBAAKA,UAAWC,EAAAA,UAAhB,WACI,iBAAKD,UAAWC,EAAAA,aAAhB,WACI,gBAAKD,UAAWC,EAAAA,SAAhB,UACI,gBACIM,IACI3B,EAAM4B,YACAC,EAAAA,GAAY7B,EAAM4B,YADxB,0DAIJE,IAAK9B,EAAM+B,eACXC,MAAM,QACNZ,UAAWC,EAAAA,kBAInB,4BACI,eAAID,UAAWC,EAAAA,MAAf,SAA8BrB,EAAMiC,SACpC,yBAAG,eAAH,UAAmBjC,EAAMkC,aAAaC,QAAQ,QAC9C,wBAAI,cACJ,iCAAOnC,EAAMoC,aACb,wBAAI,YACJ,iCAAOpC,EAAMqC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,iBAG1D,mBAEA,4BACI,wBAAI,4BACJ,gBAAIrB,UAAWC,EAAAA,KAAf,WACI,yBACI,SAAC,KAAD,CAAMD,UAAWC,EAAAA,SAAiBqB,GAAG,OAAO7B,MAAO,CAAED,KAAAA,GAArD,SAA6D,YAIjE,yBACI,SAAC,KAAD,CACIQ,UAAWC,EAAAA,SACXqB,GAAG,UACH7B,MAAO,CAAED,KAAAA,GAHb,SAIC,qBAMb,mBACA,SAAC,KAAD,WA/DR,gBAAKQ,UAAWC,EAAAA,SAAhB,SAAiC,8BAqEhD,C,iNC9GKsB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDnB,EAAY,kCAEZoB,EAAmB,mCAAG,sGACVN,EAASO,IAAI,sBADH,uBACzBjC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBkC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNO,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBnC,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZD,EAAiB,mCAAG,WAAMuC,GAAN,yFACRZ,EAASO,IAAT,gBAAsBK,IADd,uBACvBtC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBuC,EAAgB,mCAAG,WAAMD,GAAN,yFACPZ,EAASO,IAAT,gBAAsBK,EAAtB,aADO,uBACtBtC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBwC,EAAiB,mCAAG,WAAMF,GAAN,yFACRZ,EAASO,IAAT,gBAAsBK,EAAtB,aADQ,uBACvBtC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.jsx","serviceApi/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__-Fi5e\",\"title\":\"MovieDetails_title__-2MyV\",\"pictureMovie\":\"MovieDetails_pictureMovie__N55k-\",\"link\":\"MovieDetails_link__Lx01J\",\"active\":\"MovieDetails_active__+MInO\",\"notFound\":\"MovieDetails_notFound__UdDgn\",\"container\":\"MovieDetails_container__uHDv9\",\"movieDetalis\":\"MovieDetails_movieDetalis__TZLmr\",\"list\":\"MovieDetails_list__abT1S\",\"itemLink\":\"MovieDetails_itemLink__K+Y03\"};","import { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate, Link, Outlet } from \"react-router-dom\";\nimport { fetchMovieDetails, IMAGE_URL } from \"serviceApi/api-movies\";\nimport Loader from \"components/loader/Loader\";\nimport { BiCaretLeftCircle } from 'react-icons/bi';\nimport { IconContext } from 'react-icons';\nimport styles from './MovieDetails.module.css';\n\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { movieId } = useParams();\n    const from = location.state?.from || 'movies';\n\n\n    useEffect(() => {\n        const getDetailsMovie = async () => {\n            setLoading(true);\n            try {\n                const data = await fetchMovieDetails(movieId);\n                setMovie(data);\n            } catch (error) {\n                setError(error.message)\n            } finally {\n                setLoading(false);\n            }\n        };\n        getDetailsMovie();\n    }, [movieId]);\n\n    const onGoBack = () => {\n        navigate(from);\n    };\n\n    return (\n        <>\n            {error && <p>Something goes wrong</p>}\n            {loading && <Loader />}\n            {!movie ? (\n                <div className={styles.notFound}>This movie is not found</div>\n            ) : (\n                <>\n                    <button className={styles.button} type=\"button\" onClick={onGoBack}>\n                        <IconContext.Provider\n                            value={{\n                                color: 'white',\n                                size: 22,\n                                className: 'global-class-name',\n                            }}\n                        >\n                            <div>\n                                <BiCaretLeftCircle />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Go back</span>\n                    </button>\n                    <div className={styles.container}>\n                        <div className={styles.movieDetalis}>\n                            <div className={styles.movieImg}>\n                                <img\n                                    src={\n                                        movie.poster_path\n                                            ? IMAGE_URL + movie.poster_path\n                                            : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                                    }\n                                    alt={movie.original_title}\n                                    widht=\"300px\"\n                                    className={styles.pictureMovie}\n                                />\n                            </div>\n\n                            <div>\n                                <h2 className={styles.title}>{movie.title}</h2>\n                                <p>User Score: {`${movie.vote_average.toFixed(1)}`}</p>\n                                <h3>Overview</h3>\n                                <p>{`${movie.overview}`}</p>\n                                <h3>Genres</h3>\n                                <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n                            </div>\n                        </div>\n                        <hr />\n\n                        <div>\n                            <h3>Additional information</h3>\n                            <ul className={styles.list}>\n                                <li>\n                                    <Link className={styles.itemLink} to=\"cast\" state={{ from }}>\n                                        Cast\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link\n                                        className={styles.itemLink}\n                                        to=\"reviews\"\n                                        state={{ from }}\n                                    >\n                                        Reviews\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                        <hr />\n                        <Outlet />\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '9f483b2fd7e828c71a7a1dd0e1411689',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","movie","setMovie","loading","setLoading","error","setError","location","useLocation","navigate","useNavigate","movieId","useParams","from","state","useEffect","getDetailsMovie","fetchMovieDetails","data","message","Loader","className","styles","type","onClick","value","color","size","src","poster_path","IMAGE_URL","alt","original_title","widht","title","vote_average","toFixed","overview","genres","map","genre","name","join","to","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","searchMovies","query","page","include_adult","id","fetchMovieActors","fetchMovieReviews"],"sourceRoot":""}